# --- Redis ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379

# --- PostgreSQL ---
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
      - name: postgres-db
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "analytics_db"
        - name: POSTGRES_USER
          value: "postgres_user"
        - name: POSTGRES_PASSWORD
          value: "postgres_password"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres-db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

# --- RabbitMQ ---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.13-management-alpine
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    protocol: TCP
    port: 5672
    targetPort: 5672
  - name: management
    protocol: TCP
    port: 15672
    targetPort: 15672

# --- API Gateway ---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      imagePullSecrets:
        - name: gitlab-registry-secret
      containers:
      - name: api-gateway
        image: registry.gitlab.com/lukazsh-group/url-shortener-app/api-gateway:76765bf2
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_ADDR
          value: "redis-service:6379"
        - name: APP_HOST
          value: "http://138.197.226.109"
        - name: AMQP_URL
          value: "amqp://guest:guest@rabbitmq-service:5672/"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
spec:
  selector:
    app: api-gateway
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

# --- Analytics Worker ---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-worker-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-worker
  template:
    metadata:
      labels:
        app: analytics-worker
    spec:
      imagePullSecrets:
        - name: gitlab-registry-secret
      containers:
      - name: analytics-worker
        image: registry.gitlab.com/lukazsh-group/url-shortener-app/analytics-worker:76765bf2
        env:
        - name: AMQP_URL
          value: "amqp://guest:guest@rabbitmq-service:5672/"
        - name: POSTGRES_CONN_STR
          value: "postgres://postgres_user:postgres_password@postgres-service:5432/analytics_db?sslmode=disable"

# --- Frontend ---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      imagePullSecrets:
        - name: gitlab-registry-secret
      containers:
      - name: frontend
        image: registry.gitlab.com/lukazsh-group/url-shortener-app/frontend:76765bf2
        ports:
        - containerPort: 80
        env:
        - name: API_HOST
          value: "api-gateway-service"
        - name: API_PORT
          value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80